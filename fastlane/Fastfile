# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  desc "All iOS lanes"
  lane :all_checks do
    sh("mkdir -p ../sonar-reports/iOS")
    lint
    run_all_test_ios
    coverage_ios
  end

  desc "Run all test for iOS modules"
  lane :run_all_test_ios do
    run_tests(
      project: "NewMovement.xcodeproj",
      scheme: "iOSTests",
      sdk: "iphonesimulator14.3",
      device: "iPhone 8 (14.3)",
      derived_data_path: "./DerivedData",
      output_directory: "sonar-reports/iOS",
      clean: true,
    )
  end

  desc "Calculate the code coverage for iOS packages"
  lane :coverage_ios do
    slather(
      scheme: "iOSTests",
      proj: "NewMovement.xcodeproj",
      output_directory: "sonar-reports/iOS",
      cobertura_xml: "true",
      build_directory: "./DerivedData",
      sonarqube_xml: true,
      cobertura_xml: false,
      ignore: [
        "*/Package.swift",
        "DerivedData/*",
        "*/Tests/*"
      ],
      source_directory: "./Sources"
    )
  end

  desc "Lint all files"
  lane :lint do
    swiftlint(
      output_file: "sonar-reports/iOS/NewMovement-swiftlint.txt",
      ignore_exit_status: true
    )
  end
end

platform :mac do

  desc "All macOS lanes"
  lane :all_checks do
    sh("mkdir -p ../sonar-reports/macOS")
    lint
    run_all_test_macos
    coverage_macos
  end

  desc "Run all test for macOS modules"
  lane :run_all_test_macos do
    run_tests(
      project: "NewMovement.xcodeproj",
      scheme: "macOSTests",
      destination: "'platform=macOS, arch=x86_64'",
      derived_data_path: "./DerivedData",
      output_directory: "sonar-reports/macOS",
      clean: true,
    )
  end

  desc "Calculate the code coverage for macOS packages"
  lane :coverage_macos do
    slather(
      scheme: "macOSTests",
      proj: "NewMovement.xcodeproj",
      output_directory: "sonar-reports/macOS",
      cobertura_xml: "true",
      build_directory: "./DerivedData",
      sonarqube_xml: true,
      cobertura_xml: false,
      ignore: [
        "*/Package.swift",
        "DerivedData/*",
        "*/Tests/*"
      ],
      source_directory: "./Sources"
    )
  end

  desc "Lint all files"
  lane :lint do
    swiftlint(
      output_file: "sonar-reports/macOS/NewMovement-swiftlint.txt",
      ignore_exit_status: true
    )
  end
end

